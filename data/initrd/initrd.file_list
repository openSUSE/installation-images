d run var
s ../run var
d bin mnt proc sys tmp mounts root download scripts
d dev/pts dev/shm
d etc/sysconfig/hardware etc/YaST2 etc/X11
d var/tmp var/adm/mount
d var/cache/fontconfig var/cache/zypp
d var/lib/YaST2 var/lib/hardware/unique-keys var/lib/autoinstall var/lib/xkb/compiled
d var/lib/systemd/migrated var/lib/polkit var/lib/sshd var/lib/empty
d var/log/cups var/log/YaST2 var/log/zypp
d var/spool var/run/libstorage var/run/hotplug var/run/ntp
d run/dbus run/lock

s /run/lock /var/lock
s /run/lock /var/spool/locks

t var/run/utmp

c 1777 0 0 tmp

# some basic devices
e cp -a /dev/* dev


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
# packages without scripts
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

TEMPLATE:
  /

AUTODEPS:

dbus-1-x11: ignore
diffutils: ignore
dirmngr: ignore
fillup: ignore
gnu-unifont-bitmap-fonts: ignore
info: ignore
insserv-compat: ignore
keyutils: ignore
libcrack*: ignore
libmagic*: ignore
logrotate: ignore
openssl: ignore
permissions: ignore
pinentry: ignore
suspend: ignore
update-alternatives: ignore
?dracut: ignore
?mkinitrd: ignore
perl: ignore
filesystem: ignore

samba-libs: nodeps
  /usr/lib*/samba/libreplace*.so
  /usr/lib*/samba/libwinbind-client*.so

?biosdevname:
cpio:
cracklib-dict-small:
curl:
device-mapper:
ethtool:
glibc:
haveged:
hwinfo:
iputils:
iscsiuio:
kpartx:
kmod-compat:
krb5:
lsscsi:
mdadm:
net-tools:
?net-tools-deprecated:
nfsidmap:
sed:
?wicked:
?s390-tools-hmcdrvfs:
sysconfig-netconfig:
sg3_utils:
systemd-presets-branding-<base_theme>:
tar:
util-linux-systemd:
vlan:

if theme eq 'SLES'
  sles-release:
  sles-release-MINI:
elsif theme eq 'SLED'
  sled-release:
  sled-release-MINI:
else
  openSUSE-release:
  openSUSE-release-mini:
endif

linuxrc:
  if linuxrc
    if linuxrc =~ m#^[^/]#
      m /usr/sbin/<linuxrc> /init
    else
      X <linuxrc> /init
    endif
  else
    m /usr/sbin/linuxrc /init
  endif
  s /lbin/extend /bin
  d /etc/linuxrc.d

grep:
  /usr/bin/grep

terminfo-base:
  /usr/share/terminfo

terminfo:
  /usr/share/terminfo/i/ibm3151

netcfg:
  /etc/hosts
  /etc/netgroup
  /etc/protocols
  /etc/services

?xf86-input-vmmouse:
  /usr/bin/vmmouse_detect

suse-module-tools:
  /etc/modprobe.d

?s390-tools:
  /sbin/zfcp_*_configure
  /sbin/zfcp_san_disc
  /sbin/iucv_configure
  /sbin/ctc_configure
  /sbin/qeth_configure
  /sbin/dasdinfo
  /sbin/chzdev
  /etc/udev
  /boot

kbd:
  /usr/bin/dumpkeys
  /usr/bin/loadkeys
  /usr/bin/setfont
  /usr/share/kbd/keymaps
  /usr/share/kbd/consoletrans/koi2alt
  /usr/share/kbd/consoletrans/trivial
  /usr/share/kbd/consolefonts/default8x16.psfu.gz

cifs-utils:
  /sbin/mount.cifs

?acpica:
  /usr/sbin/acpidump

?dmidecode:
  /usr/sbin/dmidecode

?bootsplash:
  /sbin/splash

if exists(wpa_supplicant)
  wpa_supplicant:
    /

  wireless-tools:
    /usr/sbin
    /etc
    r /usr/sbin/switch_prism_driver
    r /usr/sbin/install_acx100_firmware
    r /usr/sbin/install_intersil_firmware
endif

coreutils:
  /usr/bin/cat
  /usr/bin/chmod
  /usr/bin/chown
  /usr/bin/cp
  /usr/bin/date
  /usr/bin/df
  /usr/bin/false
  /usr/bin/head
  /usr/bin/ln
  /usr/bin/ls
  /usr/bin/md5sum
  /usr/bin/mkdir
  /usr/bin/mktemp
  /usr/bin/mv
  /usr/bin/readlink
  /usr/bin/rm
  /usr/bin/rmdir
  /usr/bin/sleep
  /usr/bin/stty
  /usr/bin/tail
  /usr/bin/touch
  /usr/bin/tr
  /usr/bin/tty
  /usr/bin/true
  /usr/bin/uname
  # linuxrc needs it in /bin
  m /usr/bin/rm bin

bash:
  /bin/{sh,bash}
  s bash /bin/lsh

ncurses-utils:
  /usr/bin/tset

libncurses5:
  /lib*/libncurses.so.*
  /lib*/libncursesw.so.*
  /lib*/libtinfo.so.*

iproute2:
  /bin/ip 
  /sbin/ip
  /usr/sbin/ip

open-iscsi:
  # must be writable
  /etc/iscsi
  c 644 0 0 /etc/iscsi/iscsid.conf


util-linux:
  /usr/sbin/mkswap
  /usr/sbin/swapon
  /usr/bin/more
  /usr/bin/mount
  /usr/bin/umount
  /usr/sbin/setctsid
  /usr/sbin/losetup
  /usr/sbin/blkid

nfs-client:
  /sbin/mount.nfs
  /sbin/mount.nfs4
  /sbin/umount.nfs
  /sbin/umount.nfs4
  /etc/idmapd.conf
  /usr/sbin/rpc.idmapd
  /var/lib/nfs

gpg2:
  /usr/bin/gpg{,2}
  d root/.gnupg

?libgcrypt20-hmac:

ntfs-3g:
  /
  s mount.ntfs-3g /sbin/mount.ntfs

?kexec-tools: nodeps
  /usr/sbin/kexec

blog:
  /sbin/showconsole
  c 755 0 0 /sbin/showconsole

sysvinit-tools: nodeps
  /sbin/startproc

rpm:
  /usr/bin/rpm2cpio
  /usr/bin/rpmkeys
  /usr/lib*/librpm{,io}.so.*
  /usr/lib/rpm/rpmrc

squashfs:
  /usr/bin/mksquashfs

strace:
  /usr/bin/strace

joe:
  /usr/bin/joe
  /etc/joe/{joerc,ftyperc}

?sbl:
  /
  r /etc/sbl/profile/default
  s y2base /etc/sbl/profile/default

gzip:
  /usr/bin/gzip
  /usr/bin/gunzip

xz:
  /usr/bin/xz

gawk:
  /usr/bin/gawk
  s gawk usr/bin/awk

nscd:
  # remaining files are in root image
  d /var/run/nscd

?virtualbox-guest-tools: nodeps
  /usr/lib/udev

?xf86-input-vmmouse: nodeps
  /usr/lib/udev/rules.d

?xf86-input-wacom: nodeps
  /usr/lib/udev/rules.d

multipath-tools:
  /var/cache/multipath

shadow:
  /etc
  /usr/sbin/groupadd
  /usr/sbin/useradd
  /usr/sbin/useradd.local
  d /etc/skel

pam:
  /sbin
  /etc
  /lib*/libpam*.so.*
  /lib*/security/pam_group.so
  /lib*/security/pam_unix*.so
  /lib*/security/pam_env.so
  /lib*/security/pam_limits.so
  /lib*/security/pam_umask.so
  /lib*/security/pam_rootok.so
  /lib*/security/pam_permit.so
  /lib*/security/pam_deny.so

if exists(plymouth)
  plymouth:
    /
    R s/^Theme=.*/Theme=tribar/ /usr/share/plymouth/plymouthd.defaults
  plymouth-scripts: nodeps
  plymouth-plugin-script:
  plymouth-branding-<base_theme>: nodeps
  ?plymouth-theme-tribar:
endif

procps:
  /bin/ps

# maybe we don't need everything...
systemd:
  /usr/bin/systemd-detect-virt
  /usr/lib/systemd/systemd-sysctl
  /usr/lib*/libsystemd*.so.*
  # plymouth is not working if we include all rules - no idea why
  /usr/lib/udev/rules.d/99-systemd.rules

sysconfig:
  /
  m /var/adm/fillup-templates/sysconfig.config-network /etc/sysconfig/network/config
  m /var/adm/fillup-templates/sysconfig.dhcp-network /etc/sysconfig/network/dhcp
  r sbin/rcnetwork

?fcoe-utils:
  /etc

# we add them here so they are writable
autoyast2: nodeps
  /var/lib/autoinstall

# we add them here so they are writable
autoyast2-installation: nodeps
  /var/lib/autoinstall
  /var/adm/autoinstall

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
# packages with scripts
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

aaa_base:
  E prein
  /
  # steal them from base image
  e cp /etc/passwd etc
  e cp /etc/group etc
  e cp /etc/shadow etc
  t /run/utmp

dbus-1:
  /
  E prein

# For FIPS installation:

libopenssl*_*_*-hmac:

?openssh-fips:
?openssh-hmac:

openssh: nodeps
  E prein
  d etc/ssh

udev:
  /
  E groupadd -r tape

# we just want the user & group entries
polkit: nodeps
  E prein

# we just want the user & group entries
nscd:
  E prein

# we just want the user & group entries
rpcbind:
  /var/lib
  E prein

# we just want the user & group entries
openslp-server:
  E prein


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
# optional extra packages
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if with_gdb
  valgrind:
    /

  kbd:
    /bin/kbd_mode

  strace:
    /usr/bin/strace

  gdb:
    /usr/bin/gdb

  libpython2_6-1_0:
    /usr/lib*

  libexpat1:
    /lib*/libexpat.so.*

  libprocps*:
    /

  psmisc:
    /bin/fuser
    /usr/bin/killall
    /usr/bin/pstree

  coreutils:
    /usr/bin/head
    /usr/bin/tail

  if linuxrc eq ""
    linuxrc-debuginfo:
      /
  endif

  if with_gdb == 2

    linuxrc:
      e mv init sbin

      e echo -e "#! /bin/sh\nexport PATH=/bin:/usr/bin:/sbin:/usr/sbin:/lbin\nPS1=\\\\\\w\>\n/bin/bash\n" >init
      c 755 0 0 init
  endif

  if with_gdb == 3

    linuxrc:
      e mv init sbin

      e echo run >zap
      e echo -e "#! /bin/sh\ngdb --command /zap /sbin/init" >init
      c 755 0 0 init

  endif


  d /lbin
  s /init /lbin/cp
  s /init /lbin/mv
  s /init /lbin/modprobe
  s /init /lbin/rmmod
  s /init /lbin/lsmod
  s /init /lbin/mount
  s /init /lbin/umount
  s /init /lbin/cat
  s /init /lbin/hex
  s /init /lbin/lsof
  s /init /lbin/rm
  s /init /lbin/ln
  s /init /lbin/ls
  s /init /lbin/mkdevs
  s /init /lbin/mkdir
  s /init /lbin/chroot
  s /init /lbin/kill
  s /init /lbin/swapoff
  s /init /lbin/free
  s /init /lbin/fstype
  s /init /lbin/lndir

endif

# certificates are prepared in base.file_list
# here we just copy the files from there
# the packages are listed here just so they show up in the package list later
ca-certificates: nodeps
  /etc/ca-certificates
  /etc/pki
  /usr

ca-certificates-mozilla: nodeps
  # copy ssl certificates
  e cp -a /etc/ssl etc
  e cp -a /var/lib/ca-certificates var/lib

:

d /usr/share/pki/trust/anchors


include theme.file_list

:

# replace issue and motd with our own messages
include texts.file_list

# patch out 'Server' from product name
R s/ Server//g etc/os-release
R s/ Server//g etc/issue

# remove files we don't want to show up at all
r /usr/share/{doc,info,locale,man} /usr/src/packages /var/adm/fillup-templates
r /etc/passwd?* /etc/shadow?* /etc/group?*
r /etc/profile.d
if arch ne 's390' && arch ne 's390x'
  r /boot
endif

# mtab is symlink now
r /etc/mtab
s /proc/self/mounts /etc/mtab

# our own rules file which loads only pnp subsystem mods
x etc/80-drivers.rules /usr/lib/udev/80-drivers.rules.no_modprobe

# don't let udev lock the DVD tray
R s/--lock-media/--unlock-media/g usr/lib/udev/rules.d/60-cdrom_id.rules

# systemd service start script
x service_start /bin

# mini host file
x etc/host.conf etc

# log to console 4
x etc/syslog.conf etc

# additional scripts for linuxrc
x scripts /
# hmc exists only on s390
if !exists(s390-tools-hmcdrvfs)
  r /scripts/url/hmc
endif

# initial /etc/adjtime (bnc #764690)
x etc/adjtime etc

# get us some basic aliases
x etc/bashrc /.profile
x etc/bashrc root/.profile

e ldconfig -r .

# get the gpg keys to trust from build root
d /usr/lib/rpm/gnupg/keys
X /usr/lib/rpm/gnupg/keys /usr/lib/rpm/gnupg
