d lib/modules/<kernel_ver>
d lib/modules/<kernel_ver>/initrd
s lib/modules/<kernel_ver>/initrd modules

<kernel_rpm>:

  # temporary
  L lib/firmware fw

  /lib/modules/<kernel_ver>/modules.order
  e perl -pi -e "s#.*/#initrd/#" lib/modules/<kernel_ver>/modules.order
  /lib/modules/<kernel_ver>/modules.builtin
  e perl -pi -e "s#.*/#initrd/#" lib/modules/<kernel_ver>/modules.builtin

x module.help modules/module.config

include gen/module.files.autoload
include gen/module.files.firewire
include gen/module.files.fs
include gen/module.files.net
include gen/module.files.pcmcia
include gen/module.files.WLAN
include gen/module.files.scsi
include gen/module.files.usb
include gen/module.files.acpi
include gen/module.files.other

# note: order _does_ matter
A gen/module.config.autoload modules/module.config
A gen/module.config.scsi modules/module.config
A gen/module.config.net modules/module.config
A gen/module.config.pcmcia modules/module.config
A gen/module.config.WLAN modules/module.config
A gen/module.config.usb modules/module.config
A gen/module.config.firewire modules/module.config
A gen/module.config.fs modules/module.config
A gen/module.config.acpi modules/module.config
A gen/module.config.other modules/module.config

if arch eq 's390' || arch eq 's390x'
  include gen/module.files.s390
  A gen/module.config.s390 modules/module.config
endif

if arch eq 'ppc' || arch eq 'ppc64' || arch eq 'ppc64le'
  include gen/module.files.ppc
  A gen/module.config.ppc modules/module.config
endif

if 0
# add alsa modules
  lib/modules/<kernel_ver>/kernel/sound
endif

# add modules.alias, modules.dep
L boot/System.map* System.map
e /sbin/depmod -a -b . -F System.map <kernel_ver>
r System.map

# copy needed firmware files
d lib/firmware
e mlist3 <kernel_ver> fw || true

# remove temp firmware dir
r fw

